[{"C:\\dev\\final-frontend\\src\\index.js":"1","C:\\dev\\final-frontend\\src\\App.js":"2","C:\\dev\\final-frontend\\src\\reportWebVitals.js":"3","C:\\dev\\final-frontend\\src\\components\\pages\\Home.js":"4","C:\\dev\\final-frontend\\src\\components\\auth\\Login.js":"5","C:\\dev\\final-frontend\\src\\components\\auth\\Register.js":"6","C:\\dev\\final-frontend\\src\\components\\layout\\Header.js":"7","C:\\dev\\final-frontend\\src\\components\\auth\\AuthOptions.js":"8","C:\\dev\\final-frontend\\src\\context\\UserContext.js":"9","C:\\dev\\final-frontend\\src\\components\\misc\\ErrorNotice.js":"10","C:\\dev\\final-frontend\\src\\components\\misc\\Expenses.js":"11","C:\\dev\\final-frontend\\src\\components\\layout\\DashBoards.js":"12","C:\\dev\\final-frontend\\src\\components\\misc\\Budgets.js":"13","C:\\dev\\final-frontend\\src\\components\\misc\\LineChart.js":"14","C:\\dev\\final-frontend\\src\\components\\misc\\DashBoard.js":"15","C:\\dev\\final-frontend\\src\\components\\misc\\PieChart.js":"16","C:\\dev\\final-frontend\\src\\components\\misc\\UpdateExpenses.js":"17","C:\\dev\\final-frontend\\src\\components\\misc\\UpdateBudgets.js":"18","C:\\dev\\FinalProject\\final-frontend\\src\\index.js":"19","C:\\dev\\FinalProject\\final-frontend\\src\\reportWebVitals.js":"20","C:\\dev\\FinalProject\\final-frontend\\src\\App.js":"21","C:\\dev\\FinalProject\\final-frontend\\src\\context\\UserContext.js":"22","C:\\dev\\FinalProject\\final-frontend\\src\\components\\pages\\Home.js":"23","C:\\dev\\FinalProject\\final-frontend\\src\\components\\layout\\Header.js":"24","C:\\dev\\FinalProject\\final-frontend\\src\\components\\auth\\Login.js":"25","C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\UpdateExpenses.js":"26","C:\\dev\\FinalProject\\final-frontend\\src\\components\\auth\\Register.js":"27","C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\UpdateBudgets.js":"28","C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\Expenses.js":"29","C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\DashBoard.js":"30","C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\Budgets.js":"31","C:\\dev\\FinalProject\\final-frontend\\src\\components\\layout\\DashBoards.js":"32","C:\\dev\\FinalProject\\final-frontend\\src\\components\\auth\\AuthOptions.js":"33","C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\ErrorNotice.js":"34","C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\PieChart.js":"35"},{"size":500,"mtime":499162500000,"results":"36","hashOfConfig":"37"},{"size":2342,"mtime":1608063931154,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":853,"mtime":1608065122466,"results":"40","hashOfConfig":"37"},{"size":1680,"mtime":1607625068000,"results":"41","hashOfConfig":"37"},{"size":2296,"mtime":1607596785856,"results":"42","hashOfConfig":"37"},{"size":332,"mtime":1608065705443,"results":"43","hashOfConfig":"37"},{"size":973,"mtime":1608066010354,"results":"44","hashOfConfig":"37"},{"size":77,"mtime":1607456954455,"results":"45","hashOfConfig":"37"},{"size":244,"mtime":1607596778885,"results":"46","hashOfConfig":"37"},{"size":5888,"mtime":1607953568843,"results":"47","hashOfConfig":"37"},{"size":528,"mtime":1608067689978,"results":"48","hashOfConfig":"37"},{"size":6052,"mtime":1608062997309,"results":"49","hashOfConfig":"37"},{"size":2656,"mtime":1608007028607,"results":"50","hashOfConfig":"37"},{"size":254,"mtime":1608025350095,"results":"51","hashOfConfig":"37"},{"size":6990,"mtime":1608069072548,"results":"52","hashOfConfig":"37"},{"size":0,"mtime":1608062705676,"results":"53","hashOfConfig":"37"},{"size":0,"mtime":1608062695409,"results":"54","hashOfConfig":"37"},{"size":500,"mtime":499162500000,"results":"55","hashOfConfig":"56"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"56"},{"size":2342,"mtime":1608063931154,"results":"58","hashOfConfig":"56"},{"size":77,"mtime":1607456954455,"results":"59","hashOfConfig":"56"},{"size":853,"mtime":1608065122466,"results":"60","hashOfConfig":"56"},{"size":328,"mtime":1608141270931,"results":"61","hashOfConfig":"56"},{"size":1680,"mtime":1607625068000,"results":"62","hashOfConfig":"56"},{"size":6494,"mtime":1608113331898,"results":"63","hashOfConfig":"56"},{"size":2296,"mtime":1607596785856,"results":"64","hashOfConfig":"56"},{"size":6644,"mtime":1608112105235,"results":"65","hashOfConfig":"56"},{"size":5888,"mtime":1607953568843,"results":"66","hashOfConfig":"56"},{"size":254,"mtime":1608025350095,"results":"67","hashOfConfig":"56"},{"size":6052,"mtime":1608062997309,"results":"68","hashOfConfig":"56"},{"size":528,"mtime":1608067689978,"results":"69","hashOfConfig":"56"},{"size":973,"mtime":1608066010354,"results":"70","hashOfConfig":"56"},{"size":244,"mtime":1607596778885,"results":"71","hashOfConfig":"56"},{"size":7808,"mtime":1608120301419,"results":"72","hashOfConfig":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1s4mzm3",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1oknmj9",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},"C:\\dev\\final-frontend\\src\\index.js",[],["152","153"],"C:\\dev\\final-frontend\\src\\App.js",[],"C:\\dev\\final-frontend\\src\\reportWebVitals.js",[],"C:\\dev\\final-frontend\\src\\components\\pages\\Home.js",["154","155","156"],"C:\\dev\\final-frontend\\src\\components\\auth\\Login.js",[],"C:\\dev\\final-frontend\\src\\components\\auth\\Register.js",[],"C:\\dev\\final-frontend\\src\\components\\layout\\Header.js",[],"C:\\dev\\final-frontend\\src\\components\\auth\\AuthOptions.js",[],"C:\\dev\\final-frontend\\src\\context\\UserContext.js",[],"C:\\dev\\final-frontend\\src\\components\\misc\\ErrorNotice.js",[],"C:\\dev\\final-frontend\\src\\components\\misc\\Expenses.js",["157"],"import React,{useEffect,useContext,useState} from 'react';\r\nimport {useHistory,Link} from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport DashBoards from \"../layout/DashBoards\"\r\nimport ErrorNotice from \"./ErrorNotice\";\r\nimport Axios from 'axios';\r\n\r\nexport default function Expense() {\r\n    const [expenseName,setTitle] = useState();\r\n    const [month, setMonth] = useState();\r\n    const [year,setYear] =useState();\r\n    const [expense,setCost] = useState();\r\n    const [error, setError] = useState();\r\n    const {userData,setUserData} = useContext(UserContext);\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        if(!userData.user) history.push(\"/login\")\r\n    });\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n          const token=localStorage.getItem(\"auth-token\");\r\n          const newExpense={expense,month,year,expenseName};\r\n          \r\n          const response = await Axios.post(\"http://localhost:5000/expenses\",newExpense,{\r\n            headers: {\r\n              'x-auth-token': `${token}`\r\n            }\r\n          });\r\n          \r\n          if(response.status === 200)\r\n          {\r\n        \r\n            var dropDown_title = document.getElementById(\"title\");\r\n            setTitle(undefined)\r\n            dropDown_title.selectedIndex = \"none\";\r\n            var dropDown_month = document.getElementById(\"month\");\r\n            setMonth(undefined)\r\n            dropDown_month.selectedIndex = \"none\";\r\n            var dropDown_year = document.getElementById(\"year\");\r\n            setYear(undefined)\r\n            dropDown_year.selectedIndex = \"none\";\r\n            var dropDown_cost = document.getElementById(\"cost\");\r\n            setCost (undefined)\r\n            dropDown_cost.value = \"\";\r\n  \r\n            alert(\"Expense added successfully\");\r\n          }\r\n\r\n\r\n        } catch (err) {\r\n            err.response.data.msg&&setError(err.response.data.msg);\r\n        }\r\n      };\r\n    return (\r\n        <>\r\n        <div className=\"page\">\r\n            {userData.user?(\r\n            <>\r\n            <DashBoards/>\r\n            <h1>Add Expense</h1>\r\n            {error && <ErrorNotice message={error} clearError={() => setError(undefined) }/>}\r\n            <form className=\"form\" onSubmit={submit}>\r\n\r\n            <label htmlFor=\"title\">ExpenseName</label>\r\n            <select id=\"title\" onChange={(e) => setTitle(e.target.value)}>\r\n                <option value=\"none\" selected disabled hidden> \r\n                choose expense\r\n                </option> \r\n                <option value=\"Electricity\">Electricity</option>\r\n                <option value=\"Rent\">Rent</option>\r\n                <option value=\"Medicines\">Medicines</option>\r\n                <option value=\"Grocery\">Grocery</option>\r\n                <option value=\"EatOut\">EatOut</option>\r\n                <option value=\"Entertainment\">Entertainment</option>\r\n                <option value=\"Others\">Others</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"month\">Month</label>\r\n            <select id=\"month\" name=\"month\" onChange={(e) => setMonth(e.target.value)}>\r\n              <option value=\"none\" selected disabled hidden> \r\n              ---\r\n              </option> \r\n              <option value=\"1\">January</option>\r\n              <option value=\"2\">February</option>\r\n              <option value=\"3\">March</option>\r\n              <option value=\"4\">April</option>\r\n              <option value=\"5\">May</option>\r\n              <option value=\"6\">June</option>\r\n              <option value=\"7\">July</option>\r\n              <option value=\"8\">August</option>\r\n              <option value=\"9\">September</option>\r\n              <option value=\"10\">October</option>\r\n              <option value=\"11\">November</option>\r\n              <option value=\"12\">December</option>\r\n            </select>\r\n\r\n\r\n            <label htmlFor=\"year\">Year</label>\r\n            <select id=\"year\" name=\"year\" onChange={(e) => setYear(e.target.value)}>\r\n              <option value=\"none\" selected disabled hidden> \r\n              ---\r\n              </option> \r\n        \t    <option value=\"1995\">1995</option>\r\n              <option value=\"1996\">1996</option>\r\n              <option value=\"1997\">1997</option>\r\n              <option value=\"1998\">1998</option>\r\n              <option value=\"1999\">1999</option>\r\n              <option value=\"2000\">2000</option>\r\n              <option value=\"2001\">2001</option>\r\n              <option value=\"2002\">2002</option>\r\n              <option value=\"2003\">2003</option>\r\n              <option value=\"2004\">2004</option>\r\n              <option value=\"2005\">2005</option>\r\n              <option value=\"2006\">2006</option>\r\n              <option value=\"2007\">2007</option>\r\n              <option value=\"2008\">2008</option>\r\n              <option value=\"2009\">2009</option>\r\n              <option value=\"2010\">2010</option>\r\n              <option value=\"2011\">2011</option>\r\n              <option value=\"2012\">2012</option>\r\n              <option value=\"2013\">2013</option>\r\n              <option value=\"2014\">2014</option>\r\n              <option value=\"2015\">2015</option>\r\n              <option value=\"2016\">2016</option>\r\n              <option value=\"2017\">2017</option>\r\n              <option value=\"2018\">2018</option>\r\n              <option value=\"2019\">2019</option>\r\n              <option value=\"2020\">2020</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"cost\">Cost</label>\r\n            <input id=\"cost\" type=\"text\"\r\n            onChange={(e) => setCost(e.target.value)}\r\n            />\r\n\r\n            <input type=\"submit\" value=\"Add Expense\" />\r\n      </form>\r\n\r\n            </>\r\n            ):\r\n            (<>\r\n                <h2>You are not logged in</h2>\r\n                <Link to=\"/login\">Log in</Link>\r\n            </>\r\n            )}\r\n        </div>\r\n    \r\n        </>\r\n    )\r\n}\r\n","C:\\dev\\final-frontend\\src\\components\\layout\\DashBoards.js",[],"C:\\dev\\final-frontend\\src\\components\\misc\\Budgets.js",["158"],"C:\\dev\\final-frontend\\src\\components\\misc\\LineChart.js",["159"],"import React,{useEffect,useContext,useState} from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from 'axios';\r\n\r\n/*var data = {\r\n  labels: [],\r\n  datasets: [\r\n    {\r\n      label: 'Budgets',\r\n      fill: false,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(255,99,132,0.2)',\r\n      borderColor: 'orange',\r\n      borderWidth: 2,\r\n      data: [],\r\n    },\r\n    {\r\n      label: 'Expenses',\r\n      fill: false,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(155,231,91,0.2)',\r\n      borderColor: 'red',\r\n      borderWidth: 2,\r\n      data: [],\r\n    }\r\n  ]\r\n};*/\r\n\r\nexport default function BarChart() {\r\n  const [budgetNames, setBudgetNames] = useState();\r\n  const [budgetData, setBudgetData] = useState();\r\n  const [expenseData, setExpenseData] = useState();  \r\n\r\n\r\n    useEffect(() => {\r\n        const token=localStorage.getItem(\"auth-token\");\r\n\r\n        axios.get('http://localhost:5000/budgets/all',{\r\n            headers: {\r\n              'x-auth-token': `${token}`\r\n            }\r\n          })\r\n        .then(res => {\r\n          let bNames = [];\r\n          let bData = [];\r\n            for (var i = 0; i < res.data.length; i++) {\r\n              bNames.push(res.data[i].budgetName);\r\n              bData.push(res.data[i].budget);\r\n            }\r\n            // console.log(data);\r\n            setBudgetData(bData);\r\n            setBudgetNames(bNames);\r\n            })\r\n\r\n        axios.get('http://localhost:5000/expenses/all',{\r\n              headers: {\r\n                'x-auth-token': `${token}`\r\n              }\r\n          })\r\n        .then(res => {\r\n              let eData = [];\r\n              for (var i = 0; i < res.data.length; i++) {\r\n                eData.push(res.data[i].expense);\r\n              }\r\n              // console.log(data);\r\n              setExpenseData(eData);\r\n              })  \r\n          })\r\n    return (\r\n        <div className=\"line\">\r\n        <Line data={{\r\n  labels: budgetNames,\r\n  datasets: [\r\n    {\r\n      label: 'Budgets',\r\n      fill: false,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(255,99,132,0.2)',\r\n      borderColor: 'orange',\r\n      borderWidth: 2,\r\n      data: budgetData,\r\n    },\r\n    {\r\n      label: 'Expenses',\r\n      fill: false,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(155,231,91,0.2)',\r\n      borderColor: 'red',\r\n      borderWidth: 2,\r\n      data: expenseData,\r\n    }\r\n  ]\r\n}} options={{\r\n          responsive: true,\r\n            scales: {\r\n              yAxes: [{\r\n                ticks: {\r\n                  beginAtZero: true\r\n                }\r\n              }]\r\n            }\r\n          }} title=\"Personal Budget\"/>\r\n      </div>\r\n    )\r\n}\r\n","C:\\dev\\final-frontend\\src\\components\\misc\\DashBoard.js",[],"C:\\dev\\final-frontend\\src\\components\\misc\\PieChart.js",["160","161","162","163"],"C:\\dev\\final-frontend\\src\\components\\misc\\UpdateExpenses.js",[],"C:\\dev\\final-frontend\\src\\components\\misc\\UpdateBudgets.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\index.js",[],["164","165"],"C:\\dev\\FinalProject\\final-frontend\\src\\reportWebVitals.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\App.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\context\\UserContext.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\components\\pages\\Home.js",["166","167","168"],"import React, { useEffect,useContext } from \"react\";\r\nimport {useHistory,Link } from \"react-router-dom\";\r\nimport {BrowserRouter, Switch,Route} from \"react-router-dom\";   \r\nimport UserContext from \"../../context/UserContext\";\r\n\r\nimport DashBoards from \"../layout/DashBoards\";\r\nimport Dashboard from \"../misc/DashBoard\";\r\n\r\nimport \"../../style.css\";\r\n\r\nexport default function Home() {\r\n\r\n  const { userData } = useContext(UserContext);\r\n  const history=useHistory();\r\n  useEffect(()=>{\r\n    if(!userData.user) history.push(\"/login\")\r\n});\r\n\r\n  return (\r\n    <>\r\n    <div className=\"page\">\r\n    {userData.user?(\r\n    <>\r\n    \r\n        \r\n        <DashBoards/>\r\n        <Dashboard/>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>You are not logged in</h2>\r\n          <Link to=\"/login\">Log in</Link>\r\n        </>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n}","C:\\dev\\FinalProject\\final-frontend\\src\\components\\layout\\Header.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\components\\auth\\Login.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\UpdateExpenses.js",["169"],"import React,{useEffect,useContext,useState} from 'react';\r\nimport {useHistory,Link} from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport DashBoards from \"../layout/DashBoards\"\r\nimport ErrorNotice from \"./ErrorNotice\";\r\nimport Axios from 'axios';\r\n\r\nexport default function Expense() {\r\n    const [expenseName,setTitle] = useState();\r\n    const [month, setMonth] = useState();\r\n    const [year,setYear] =useState();\r\n    const [expense,setCost] = useState();\r\n    const [error, setError] = useState();\r\n    const {userData,setUserData} = useContext(UserContext);\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        if(!userData.user) history.push(\"/login\")\r\n    });\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n          const token=localStorage.getItem(\"auth-token\");\r\n          const newExpense={expense,month,year,expenseName};\r\n          console.log(token);\r\n          console.log(newExpense);\r\n\r\n\r\n          if(expense&&month&&year&&expenseName)\r\n            {\r\n          const checkRecord = await Axios.get(\"http://localhost:5000/expenses/findExpense\",{params:{\r\n            'expenseName':expenseName\r\n          },\r\n            headers: {\r\n              'x-auth-token': `${token}`\r\n            }\r\n          });\r\n\r\n          console.log(checkRecord.data[0]._id)\r\n\r\n          const response = await Axios.post(\"http://localhost:5000/expenses/update\",newExpense,{params:{\r\n            '_id':checkRecord.data[0]._id\r\n          },\r\n            headers: {\r\n              'x-auth-token': `${token}`\r\n            }\r\n          });\r\n          \r\n        if(response.status === 200)\r\n        {\r\n        \r\n            var dropDown_title = document.getElementById(\"title\");\r\n            setTitle(undefined)\r\n            dropDown_title.selectedIndex = \"none\";\r\n            var dropDown_month = document.getElementById(\"month\");\r\n            setMonth(undefined)\r\n            dropDown_month.selectedIndex = \"none\";\r\n            var dropDown_year = document.getElementById(\"year\");\r\n            setYear(undefined)\r\n            dropDown_year.selectedIndex = \"none\";\r\n            var dropDown_cost = document.getElementById(\"cost\");\r\n            setCost (undefined)\r\n            dropDown_cost.value = \"\";\r\n  \r\n            alert(\"Expense added successfully\");\r\n          }\r\n        }\r\n        else\r\n        {\r\n            alert(\"Please enter all the fields\")\r\n        }\r\n        } \r\n        \r\n         catch (err) {\r\n            err.response.data.msg&&setError(err.response.data.msg);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n        <div className=\"page\">\r\n            {userData.user?(\r\n            <>\r\n            <DashBoards/>\r\n            <h1>Add Expense</h1>\r\n            {error && <ErrorNotice message={error} clearError={() => setError(undefined) }/>}\r\n            <form className=\"form\" onSubmit={submit}>\r\n\r\n            <label htmlFor=\"title\">ExpenseName</label>\r\n            <select id=\"title\" onChange={(e) => setTitle(e.target.value)}>\r\n                <option value=\"none\" selected disabled hidden> \r\n                choose expense\r\n                </option> \r\n                <option value=\"Electricity\">Electricity</option>\r\n                <option value=\"Rent\">Rent</option>\r\n                <option value=\"Medicines\">Medicines</option>\r\n                <option value=\"Grocery\">Grocery</option>\r\n                <option value=\"EatOut\">EatOut</option>\r\n                <option value=\"Entertainment\">Entertainment</option>\r\n                <option value=\"Others\">Others</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"month\">Month</label>\r\n            <select id=\"month\" name=\"month\" onChange={(e) => setMonth(e.target.value)}>\r\n              <option value=\"none\" selected disabled hidden> \r\n              ---\r\n              </option> \r\n              <option value=\"1\">January</option>\r\n              <option value=\"2\">February</option>\r\n              <option value=\"3\">March</option>\r\n              <option value=\"4\">April</option>\r\n              <option value=\"5\">May</option>\r\n              <option value=\"6\">June</option>\r\n              <option value=\"7\">July</option>\r\n              <option value=\"8\">August</option>\r\n              <option value=\"9\">September</option>\r\n              <option value=\"10\">October</option>\r\n              <option value=\"11\">November</option>\r\n              <option value=\"12\">December</option>\r\n            </select>\r\n\r\n\r\n            <label htmlFor=\"year\">Year</label>\r\n            <select id=\"year\" name=\"year\" onChange={(e) => setYear(e.target.value)}>\r\n              <option value=\"none\" selected disabled hidden> \r\n              ---\r\n              </option> \r\n        \t    <option value=\"1995\">1995</option>\r\n              <option value=\"1996\">1996</option>\r\n              <option value=\"1997\">1997</option>\r\n              <option value=\"1998\">1998</option>\r\n              <option value=\"1999\">1999</option>\r\n              <option value=\"2000\">2000</option>\r\n              <option value=\"2001\">2001</option>\r\n              <option value=\"2002\">2002</option>\r\n              <option value=\"2003\">2003</option>\r\n              <option value=\"2004\">2004</option>\r\n              <option value=\"2005\">2005</option>\r\n              <option value=\"2006\">2006</option>\r\n              <option value=\"2007\">2007</option>\r\n              <option value=\"2008\">2008</option>\r\n              <option value=\"2009\">2009</option>\r\n              <option value=\"2010\">2010</option>\r\n              <option value=\"2011\">2011</option>\r\n              <option value=\"2012\">2012</option>\r\n              <option value=\"2013\">2013</option>\r\n              <option value=\"2014\">2014</option>\r\n              <option value=\"2015\">2015</option>\r\n              <option value=\"2016\">2016</option>\r\n              <option value=\"2017\">2017</option>\r\n              <option value=\"2018\">2018</option>\r\n              <option value=\"2019\">2019</option>\r\n              <option value=\"2020\">2020</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"cost\">Cost</label>\r\n            <input id=\"cost\" type=\"text\"\r\n            onChange={(e) => setCost(e.target.value)}\r\n            />\r\n\r\n            <input type=\"submit\" value=\"Add Expense\" />\r\n      </form>\r\n\r\n            </>\r\n            ):\r\n            (<>\r\n                <h2>You are not logged in</h2>\r\n                <Link to=\"/login\">Log in</Link>\r\n            </>\r\n            )}\r\n        </div>\r\n    \r\n        </>\r\n    )\r\n}\r\n","C:\\dev\\FinalProject\\final-frontend\\src\\components\\auth\\Register.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\UpdateBudgets.js",["170"],"import React,{useEffect,useContext,useState} from 'react';\r\nimport {useHistory,Link} from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport DashBoards from \"../layout/DashBoards\"\r\nimport ErrorNotice from \"./ErrorNotice\";\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nexport default function Budget() {\r\n    const [budgetName,setTitle] =useState();\r\n    const [month, setMonth] = useState();\r\n    const [year,setYear] =useState();\r\n    const [budget,setBudget] = useState();\r\n    const [error, setError] = useState();\r\n    const {userData,setUserData} = useContext(UserContext);\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        if(!userData.user) history.push(\"/login\")\r\n    });\r\n   \r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n          const token=localStorage.getItem(\"auth-token\");\r\n          const newBudget={budget,month,year,budgetName};\r\n          console.log(token);\r\n          console.log(newBudget);\r\n          \r\n\r\n            if(budget&&month&&year&&budgetName)\r\n            {\r\n          const checkRecord = await Axios.get(\"http://localhost:5000/budgets/findBudget\",{params:{\r\n            'budgetName':budgetName\r\n          },\r\n            headers: {\r\n              'x-auth-token': `${token}`\r\n            }\r\n          });\r\n\r\n\r\n        console.log(checkRecord.data[0]._id)\r\n\r\n          \r\n          const response = await Axios.put(\"http://localhost:5000/budgets/update/\",newBudget,{params:{\r\n            '_id':checkRecord.data[0]._id\r\n          },\r\n            headers: {\r\n              'x-auth-token': `${token}`\r\n            }\r\n          });\r\n\r\n        console.log(response);\r\n\r\n          if(response.status === 200)\r\n          {\r\n        \r\n            var dropDown_title = document.getElementById(\"title\");\r\n            setTitle(undefined)\r\n            dropDown_title.selectedIndex = \"none\";\r\n            var dropDown_month = document.getElementById(\"month\");\r\n            setMonth(undefined)\r\n            dropDown_month.selectedIndex = \"none\";\r\n            var dropDown_year = document.getElementById(\"year\");\r\n            setYear(undefined)\r\n            dropDown_year.selectedIndex = \"none\";\r\n            var dropDown_cost = document.getElementById(\"cost\");\r\n            setBudget(undefined)\r\n            dropDown_cost.value = \"\";\r\n  \r\n            alert(\"Budget updated successfully\");\r\n          }\r\n          \r\n        }\r\n        else\r\n        {\r\n            alert(\"Please enter all the fields\")\r\n        }\r\n\r\n        } catch (err) {\r\n            err.response.data.msg&&setError(err.response.data.msg);\r\n        }   \r\n\r\n     \r\n\r\n\r\n      };\r\n    return (\r\n        <>\r\n        <div className=\"page\">\r\n            {userData.user?(\r\n            <>\r\n\r\n            <DashBoards/>\r\n            <h1>choose budget from below categories </h1>\r\n            \r\n            {error && <ErrorNotice message={error} clearError={() => setError(undefined) }/>}\r\n\r\n      <form id=\"MyForm\" className=\"form\" onSubmit={submit}>\r\n            \r\n            <label htmlFor=\"title\">BudgetName</label>\r\n            <select id=\"title\" onChange={(e) => setTitle(e.target.value)}>\r\n                <option value=\"none\" selected disabled hidden> \r\n                choose budget  \r\n                </option> \r\n                <option value=\"Electricity\">Electricity</option>\r\n                <option value=\"Rent\">Rent</option>\r\n                <option value=\"Medicines\">Medicines</option>\r\n                <option value=\"Grocery\">Grocery</option>\r\n                <option value=\"EatOut\">EatOut</option>\r\n                <option value=\"Entertainment\">Entertainment</option>\r\n                <option value=\"Others\">Others</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"month\">Month</label>\r\n            <select id=\"month\" name=\"month\" onChange={(e) => setMonth(e.target.value)}>\r\n              <option value=\"none\" selected disabled hidden> \r\n              ---\r\n              </option> \r\n              <option value=\"1\">January</option>\r\n              <option value=\"2\">February</option>\r\n              <option value=\"3\">March</option>\r\n              <option value=\"4\">April</option>\r\n              <option value=\"5\">May</option>\r\n              <option value=\"6\">June</option>\r\n              <option value=\"7\">July</option>\r\n              <option value=\"8\">August</option>\r\n              <option value=\"9\">September</option>\r\n              <option value=\"10\">October</option>\r\n              <option value=\"11\">November</option>\r\n              <option value=\"12\">December</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"year\">Year</label>\r\n            <select id=\"year\" name=\"year\" onChange={(e) => setYear(e.target.value)}>\r\n              <option value=\"none\" selected disabled hidden> \r\n              ---\r\n              </option> \r\n        \t    <option value=\"1995\">1995</option>\r\n              <option value=\"1996\">1996</option>\r\n              <option value=\"1997\">1997</option>\r\n              <option value=\"1998\">1998</option>\r\n              <option value=\"1999\">1999</option>\r\n              <option value=\"2000\">2000</option>\r\n              <option value=\"2001\">2001</option>\r\n              <option value=\"2002\">2002</option>\r\n              <option value=\"2003\">2003</option>\r\n              <option value=\"2004\">2004</option>\r\n              <option value=\"2005\">2005</option>\r\n              <option value=\"2006\">2006</option>\r\n              <option value=\"2007\">2007</option>\r\n              <option value=\"2008\">2008</option>\r\n              <option value=\"2009\">2009</option>\r\n              <option value=\"2010\">2010</option>\r\n              <option value=\"2011\">2011</option>\r\n              <option value=\"2012\">2012</option>\r\n              <option value=\"2013\">2013</option>\r\n              <option value=\"2014\">2014</option>\r\n              <option value=\"2015\">2015</option>\r\n              <option value=\"2016\">2016</option>\r\n              <option value=\"2017\">2017</option>\r\n              <option value=\"2018\">2018</option>\r\n              <option value=\"2019\">2019</option>\r\n              <option value=\"2020\">2020</option>\r\n            </select>\r\n            \r\n\r\n\r\n            <label htmlFor=\"cost\">budget</label>\r\n            <input id=\"cost\" type=\"text\"\r\n            onChange={(e) => setBudget(e.target.value)}\r\n            />\r\n\r\n            <input type=\"submit\" value=\"Add Budget\" />\r\n      </form>\r\n            </>\r\n            ):\r\n            (<>\r\n                <h2>You are not logged in</h2>\r\n                <Link to=\"/login\">Click here to Log in</Link>\r\n            </>\r\n            )}\r\n        </div>\r\n    \r\n        </>\r\n    )\r\n}\r\n","C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\Expenses.js",["171"],"C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\DashBoard.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\Budgets.js",["172"],"import React,{useEffect,useContext,useState} from 'react';\r\nimport {useHistory,Link} from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport DashBoards from \"../layout/DashBoards\"\r\nimport ErrorNotice from \"./ErrorNotice\";\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nexport default function Budget() {\r\n    const [budgetName,setTitle] =useState();\r\n    const [month, setMonth] = useState();\r\n    const [year,setYear] =useState();\r\n    const [budget,setBudget] = useState();\r\n    const [error, setError] = useState();\r\n    const {userData,setUserData} = useContext(UserContext);\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        if(!userData.user) history.push(\"/login\")\r\n    });\r\n   \r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n          const token=localStorage.getItem(\"auth-token\");\r\n          const newBudget={budget,month,year,budgetName};\r\n          console.log(token);\r\n          console.log(newBudget);\r\n          \r\n          const response = await Axios.post(\"http://localhost:5000/budgets\",newBudget,{\r\n            headers: {\r\n              'x-auth-token': `${token}`\r\n            }\r\n          });\r\n\r\n          if(response.status === 200)\r\n          {\r\n        \r\n            var dropDown_title = document.getElementById(\"title\");\r\n            setTitle(undefined)\r\n            dropDown_title.selectedIndex = \"none\";\r\n            var dropDown_month = document.getElementById(\"month\");\r\n            setMonth(undefined)\r\n            dropDown_month.selectedIndex = \"none\";\r\n            var dropDown_year = document.getElementById(\"year\");\r\n            setYear(undefined)\r\n            dropDown_year.selectedIndex = \"none\";\r\n            var dropDown_cost = document.getElementById(\"cost\");\r\n            setBudget(undefined)\r\n            dropDown_cost.value = \"\";\r\n  \r\n            alert(\"Budget added successfully\");\r\n          }\r\n\r\n\r\n        } catch (err) {\r\n            err.response.data.msg&&setError(err.response.data.msg);\r\n        }   \r\n\r\n     \r\n\r\n\r\n      };\r\n    return (\r\n        <>\r\n        <div className=\"page\">\r\n            {userData.user?(\r\n            <>\r\n\r\n            <DashBoards/>\r\n            <h1>choose budget from below categories </h1>\r\n            \r\n            {error && <ErrorNotice message={error} clearError={() => setError(undefined) }/>}\r\n\r\n      <form id=\"MyForm\" className=\"form\" onSubmit={submit}>\r\n            \r\n            <label htmlFor=\"title\">BudgetName</label>\r\n            <select id=\"title\" onChange={(e) => setTitle(e.target.value)}>\r\n                <option value=\"none\" selected disabled hidden> \r\n                choose budget  \r\n                </option> \r\n                <option value=\"Electricity\">Electricity</option>\r\n                <option value=\"Rent\">Rent</option>\r\n                <option value=\"Medicines\">Medicines</option>\r\n                <option value=\"Grocery\">Grocery</option>\r\n                <option value=\"EatOut\">EatOut</option>\r\n                <option value=\"Entertainment\">Entertainment</option>\r\n                <option value=\"Others\">Others</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"month\">Month</label>\r\n            <select id=\"month\" name=\"month\" onChange={(e) => setMonth(e.target.value)}>\r\n              <option value=\"none\" selected disabled hidden> \r\n              ---\r\n              </option> \r\n              <option value=\"1\">January</option>\r\n              <option value=\"2\">February</option>\r\n              <option value=\"3\">March</option>\r\n              <option value=\"4\">April</option>\r\n              <option value=\"5\">May</option>\r\n              <option value=\"6\">June</option>\r\n              <option value=\"7\">July</option>\r\n              <option value=\"8\">August</option>\r\n              <option value=\"9\">September</option>\r\n              <option value=\"10\">October</option>\r\n              <option value=\"11\">November</option>\r\n              <option value=\"12\">December</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"year\">Year</label>\r\n            <select id=\"year\" name=\"year\" onChange={(e) => setYear(e.target.value)}>\r\n              <option value=\"none\" selected disabled hidden> \r\n              ---\r\n              </option> \r\n        \t    <option value=\"1995\">1995</option>\r\n              <option value=\"1996\">1996</option>\r\n              <option value=\"1997\">1997</option>\r\n              <option value=\"1998\">1998</option>\r\n              <option value=\"1999\">1999</option>\r\n              <option value=\"2000\">2000</option>\r\n              <option value=\"2001\">2001</option>\r\n              <option value=\"2002\">2002</option>\r\n              <option value=\"2003\">2003</option>\r\n              <option value=\"2004\">2004</option>\r\n              <option value=\"2005\">2005</option>\r\n              <option value=\"2006\">2006</option>\r\n              <option value=\"2007\">2007</option>\r\n              <option value=\"2008\">2008</option>\r\n              <option value=\"2009\">2009</option>\r\n              <option value=\"2010\">2010</option>\r\n              <option value=\"2011\">2011</option>\r\n              <option value=\"2012\">2012</option>\r\n              <option value=\"2013\">2013</option>\r\n              <option value=\"2014\">2014</option>\r\n              <option value=\"2015\">2015</option>\r\n              <option value=\"2016\">2016</option>\r\n              <option value=\"2017\">2017</option>\r\n              <option value=\"2018\">2018</option>\r\n              <option value=\"2019\">2019</option>\r\n              <option value=\"2020\">2020</option>\r\n            </select>\r\n            \r\n\r\n\r\n            <label htmlFor=\"cost\">budget</label>\r\n            <input id=\"cost\" type=\"text\"\r\n            onChange={(e) => setBudget(e.target.value)}\r\n            />\r\n\r\n            <input type=\"submit\" value=\"Add Budget\" />\r\n      </form>\r\n            </>\r\n            ):\r\n            (<>\r\n                <h2>You are not logged in</h2>\r\n                <Link to=\"/login\">Click here to Log in</Link>\r\n            </>\r\n            )}\r\n        </div>\r\n    \r\n        </>\r\n    )\r\n}\r\n","C:\\dev\\FinalProject\\final-frontend\\src\\components\\layout\\DashBoards.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\components\\auth\\AuthOptions.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\ErrorNotice.js",[],"C:\\dev\\FinalProject\\final-frontend\\src\\components\\misc\\PieChart.js",["173","174","175","176"],"import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js';\r\nimport { Bar,Line } from \"react-chartjs-2\";\r\n\r\nexport default function PieChart() {\r\n    const [month,setMonth] =useState();\r\n    const [year, setYear] = useState();\r\n    const [graph,setGraph] =useState();\r\n    const [graphExp,setGraphExp] =useState();\r\n    const [error, setError] = useState();\r\n    \r\n    const [budgetNames, setBudgetNames] = useState();\r\n    const [budgetData, setBudgetData] = useState();\r\n    const [expenseData, setExpenseData] = useState();\r\n\r\n\r\n    var dataSource = {\r\n        datasets: [\r\n            {\r\n                data: [],\r\n                backgroundColor: [\"#2ecc71\",\r\n                \"#3498db\",\r\n                \"#95a5a6\",\r\n                \"#9b59b6\",\r\n                \"#f1c40f\",\r\n                \"#e74c3c\",\r\n                \"#34495e\"\r\n                ]\r\n            }],\r\n        labels: []\r\n    };\r\n\r\n    var dataSourceExp = {\r\n      datasets: [\r\n          {\r\n              data: [],\r\n              backgroundColor: [\"#2ecc71\",\r\n              \"#3498db\",\r\n              \"#95a5a6\",\r\n              \"#9b59b6\",\r\n              \"#f1c40f\",\r\n              \"#e74c3c\",\r\n              \"#34495e\"\r\n              ]  \r\n          }],\r\n      labels: []\r\n    };\r\n\r\n\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            const token=localStorage.getItem(\"auth-token\");\r\n            \r\n            axios.get('http://localhost:5000/budgets/getTimedBudgets',{params:{\r\n                'month':month,\r\n                'year':year\r\n              }, headers: {\r\n                'x-auth-token': `${token}`\r\n              }})\r\n            .then(res=>{\r\n              let bNames = [];\r\n              let bData = [];\r\n                for (var i = 0; i < res.data.length; i++) {\r\n                    dataSource.datasets[0].data[i] = res.data[i].budget;\r\n                    dataSource.labels[i] = res.data[i].budgetName;\r\n                    //dataSource.datasets[0].backgroundColor[i]='#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6);\r\n                    bNames.push(res.data[i].budgetName);\r\n                    bData.push(res.data[i].budget);\r\n                }\r\n                \r\n                setBudgetData(bData);\r\n                setBudgetNames(bNames);\r\n                console.log(dataSource)\r\n                if(res){\r\n                    setGraph(true);\r\n                    createChart();\r\n                }\r\n               \r\n            }).catch(err=>{\r\n              if (err.response) {\r\n                err.response.data.msg&&setError(err.response.data.msg);\r\n              }\r\n            })\r\n        \r\n            function createChart() {\r\n                var ctx = document.getElementById(\"myChart\").getContext(\"2d\");\r\n                var myPieChart = new Chart(ctx, {\r\n                    type: 'pie',\r\n                    data: dataSource,\r\n                    options: {\r\n                      title: {\r\n                        display: true,\r\n                        text: 'Budgets'\r\n                      }\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n            axios.get('http://localhost:5000/expenses/getTimedExpenses',{params:{\r\n                      'month':month,\r\n                      'year':year\r\n                    },\r\n                        headers: {\r\n                          'x-auth-token': `${token}`\r\n                        }\r\n                    })\r\n                  .then(res => {\r\n                    let eData = [];\r\n                    for (var i = 0; i < res.data.length; i++) {\r\n                      eData.push(res.data[i].expense);\r\n                      dataSourceExp.labels[i] = res.data[i].expenseName;\r\n                      //dataSourceExp.datasets[0].backgroundColor[i]='#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6);\r\n                      dataSourceExp.datasets[0].data[i] = res.data[i].expense;\r\n                    }\r\n                      //dataSourceExp.datasets[0].backgroundColor = dataSource.datasets[0].backgroundColor\r\n                    setExpenseData(eData);\r\n                  //console.log(data);\r\n                  console.log(dataSourceExp)\r\n                  if(res){\r\n                    setGraphExp(true);\r\n                    createChartExp();\r\n                  } \r\n                  \r\n                }).catch(err=>{\r\n                  if (err.response) {\r\n                    err.response.data.msg&&setError(err.response.data.msg);\r\n                  }\r\n                })\r\n\r\n            function createChartExp() {\r\n                  var ctx = document.getElementById(\"myChartExp\").getContext(\"2d\");\r\n                  var myPieChart = new Chart(ctx, {\r\n                      type: 'pie',\r\n                      data: dataSourceExp,\r\n                      options: {\r\n                        title: {\r\n                          display: true,\r\n                          text: 'Expenses'\r\n                        }\r\n                      }\r\n                  });\r\n            }\r\n\r\n\r\n          }catch (err) {\r\n                      err.response.data.msg&&setError(err.response.data.msg);\r\n          }\r\n\r\n          };\r\n          console.log(\"budget data: \", budgetData);\r\n      return (\r\n\r\n        <div>\r\n        \r\n        <form className=\"form\" onSubmit={submit}>\r\n            <div>\r\n\r\n                <label htmlFor=\"expense-month\">Month Of Expense</label>\r\n                <input\r\n                id=\"expense-month\"\r\n                type=\"text\"\r\n                onChange={(e) => setMonth(e.target.value)}/>\r\n            </div>\r\n            \r\n            <div>\r\n\r\n                <label htmlFor=\"expense-year\">Year of Expense</label>\r\n                <input\r\n                id=\"expense-year\"\r\n                type=\"text\"\r\n                onChange={(e) => setYear(e.target.value)}/>\r\n            </div>\r\n            <input type=\"submit\" value=\"submit\" />\r\n        </form>\r\n\r\n        {graph?(<><canvas id=\"myChart\"></canvas></>):(<><h2>..</h2></>)}\r\n        {graphExp?(<><canvas id=\"myChartExp\"></canvas></>):(<><h2>No Expenses and Budgets for current Month and Year</h2></>)}\r\n        {budgetData === undefined ?null:\r\n        <>\r\n        <Bar data={{\r\n        labels: budgetNames,\r\n        datasets: [\r\n          {\r\n            label: 'Budgets',\r\n            backgroundColor: 'orange',\r\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n            borderWidth: 1,\r\n            data: budgetData,\r\n          },\r\n          {\r\n            label: 'Expenses',\r\n            backgroundColor: 'red',\r\n            hoverBackgroundColor: 'rgba(155,231,91,0.4)',\r\n            borderWidth: 1,\r\n            data: expenseData,\r\n          }\r\n        ]\r\n    }} \r\n            width={null}\r\n            height={null}\r\n            options={{\r\n              responsive: true,\r\n              scales: {\r\n                yAxes: [{ticks: { beginAtZero: true}}]\r\n              }\r\n            }} \r\n            title=\"Personal Budget\" redraw />\r\n\r\n\r\n        <Line data={{\r\n  labels: budgetNames,\r\n  datasets: [\r\n    {\r\n      label: 'Budgets',\r\n      fill: false,\r\n      lineTension: 0,\r\n      backgroundColor: 'rgba(255,99,132,0.2)',\r\n      borderColor: 'orange',\r\n      borderWidth: 2,\r\n      data: budgetData,\r\n    },\r\n    {\r\n      label: 'Expenses',\r\n      fill: false,\r\n      lineTension: 0,\r\n      backgroundColor: 'rgba(155,231,91,0.2)',\r\n      borderColor: 'red',\r\n      borderWidth: 2,\r\n      data: expenseData,\r\n    }\r\n  ]\r\n}} options={{\r\n          responsive: true,\r\n            scales: {\r\n              yAxes: [{\r\n                ticks: {\r\n                  beginAtZero: true\r\n                }\r\n              }]\r\n            }\r\n          }} title=\"Personal Budget\"/>\r\n</>\r\n}\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":22},{"ruleId":"181","severity":1,"message":"185","line":3,"column":24,"nodeType":"183","messageId":"184","endLine":3,"endColumn":30},{"ruleId":"181","severity":1,"message":"186","line":3,"column":31,"nodeType":"183","messageId":"184","endLine":3,"endColumn":36},{"ruleId":"181","severity":1,"message":"187","line":14,"column":21,"nodeType":"183","messageId":"184","endLine":14,"endColumn":32},{"ruleId":"181","severity":1,"message":"187","line":16,"column":21,"nodeType":"183","messageId":"184","endLine":16,"endColumn":32},{"ruleId":"181","severity":1,"message":"188","line":1,"column":25,"nodeType":"183","messageId":"184","endLine":1,"endColumn":35},{"ruleId":"181","severity":1,"message":"188","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":37},{"ruleId":"181","severity":1,"message":"189","line":11,"column":12,"nodeType":"183","messageId":"184","endLine":11,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":74,"column":21,"nodeType":"183","messageId":"184","endLine":74,"endColumn":31},{"ruleId":"181","severity":1,"message":"190","line":113,"column":23,"nodeType":"183","messageId":"184","endLine":113,"endColumn":33},{"ruleId":"177","replacedBy":"191"},{"ruleId":"179","replacedBy":"192"},{"ruleId":"181","severity":1,"message":"182","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":22},{"ruleId":"181","severity":1,"message":"185","line":3,"column":24,"nodeType":"183","messageId":"184","endLine":3,"endColumn":30},{"ruleId":"181","severity":1,"message":"186","line":3,"column":31,"nodeType":"183","messageId":"184","endLine":3,"endColumn":36},{"ruleId":"181","severity":1,"message":"187","line":14,"column":21,"nodeType":"183","messageId":"184","endLine":14,"endColumn":32},{"ruleId":"181","severity":1,"message":"187","line":16,"column":21,"nodeType":"183","messageId":"184","endLine":16,"endColumn":32},{"ruleId":"181","severity":1,"message":"187","line":14,"column":21,"nodeType":"183","messageId":"184","endLine":14,"endColumn":32},{"ruleId":"181","severity":1,"message":"187","line":16,"column":21,"nodeType":"183","messageId":"184","endLine":16,"endColumn":32},{"ruleId":"181","severity":1,"message":"188","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":37},{"ruleId":"181","severity":1,"message":"189","line":11,"column":12,"nodeType":"183","messageId":"184","endLine":11,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":91,"column":21,"nodeType":"183","messageId":"184","endLine":91,"endColumn":31},{"ruleId":"181","severity":1,"message":"190","line":138,"column":23,"nodeType":"183","messageId":"184","endLine":138,"endColumn":33},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'setUserData' is assigned a value but never used.","'useContext' is defined but never used.","'error' is assigned a value but never used.","'myPieChart' is assigned a value but never used.",["193"],["194"],"no-global-assign","no-unsafe-negation"]